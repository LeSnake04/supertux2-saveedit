#!/bin/bash

#TODO Commenting

#Basic set of tput commands
#formating
TPUTBOLD="$(tput bold)"
TPUTDIM="$(tput dim)"
TPUTRESET="$(tput sgr 0)" 
TPUTITALIC="$(tput sitm)" 
TPUTBLINK="$(tput sitm)"
TPUTLIGHT="$(tput smso)" 
#colors
TPUTGREEN="$(tput setaf 2)" 
TPUTRED="$(tput setaf 1)"
TPUTBLUE="$(tput setaf 6)"
TPUTGREY="$(tput setaf 241)" 

#tput presets 
USERINPUTTPUT="${TPUTRESET}${TPUTGREEN}${TPUTBOLD}" #user inputs
LOGTPUT="${TPUTRESET}${TPUTGREY}${TPUTITALIC} " #advanced logging 
ERRORTPUT="${TPUTRESET}${TPUTBOLD}${TPUTRED} " #errors
INFOTPUT="${TPUTRESET}${TPUTBLUE}" #logging


printf "${TPUTBLUE}${TPUTBOLD}${TPUTLIGHT} ************************************ \n"
printf " * Supertux2 Save editor by LeSnake * \n"
printf " ************************************ ${TPUTRESET}\n\n"

CONFIGDIR=~/.config/supertux2-saveedit
CONFIGFILE=$CONFIGDIR/config.cfg

######################
#function definitions#
######################

function loaddefaultconfig {
#load default configuration file
	printf "${INFOTPUT}Writing default configuration to config file..."
	#writing default config to config file
	printf "SAVEDIR=~/.local/share/supertux2/profile1\nBACKUPDIR=${CONFIGDIR}/Backup" >> $CONFIGDIR/config.cfg
}

function backupgamesave {
#backup game saves
	printf "${INFOTPUT} Creating backup ...\n"
	TMPBACKUPDIR=${BACKUPDIR}/backup_$(date +%Y-%m-%d_%H-%M-%S)
	mkdir $TMPBACKUPDIR
	printf "\n${LOGTPUT}"
	cp $SAVEDIR/* ${TMPBACKUPDIR} -rv
	printf "\n"
	printf "${INFOTPUT}Backup created at ${TMPBACKUPDIR}\n"
}
function listbackups {
#list avaiable backups
	BACKUPS=$(ls $BACKUPDIR)
	printf "${INFOTPUT}  Avaiable Backups:\n\n$BACKUPS\n"
}

#######
#setup#
#######

mkdir -p $CONFIGDIR

#creating config file if don't exist
if ! [ -a $CONFIGFILE ]; then
	printf "${INFOTPUT}creating config file...\n${TPUTRESET}"
	touch $CONFIGFILE
	loaddefaultconfig
fi

#loading config file
source /home/david/.config/supertux2-saveedit/config.cfg

mkdir -p $BACKUPDIR

#creating folders and files
mkdir -p $CONFIGDIR 
mkdir -p $BACKUPDIR

cd $SAVEDIR


##########
#commands#
##########
case $1 in
	"--list" | "-l" )
		#list avaiable game saves
		printf "${TPUTBLUE}Avaiable game saves:\n"
		ls $SAVEDIR/*.stsg
	;;
	"--backup" | "-b")
		backupgamesave
	;;
	"--restore" | "-r")
		#for i in $BACKUPDIR; do
		#	echo test
		#	echo $1	
		#done

		BACKUPS=$(ls $BACKUPDIR)
		SELECTEDBACKUP=$2
		SELECTEDBACKUPDIR=${BACKUPDIR}/$SELECTEDBACKUP
		if [ -z "$BACKUPS" ]; then
			printf "${ERRORTPUT}No backups found.\n Consider creating some with \'$0 backup\'\n"
		else
			
			if ! [ -z "${SELECTEDBACKUP}" ]; then
				printf "${INFOTPUT}restoring backup ${SELECTEDBACKUPDIR}\n\n${LOGTPUT}"
				cp $BACKUPDIR/$SELECTEDBACKUP/* $SAVEDIR -rv
				printf "${INFOTPUT}\n Restored backup \'${SELECTEDBACKUPDIR}\'\n"
			else
				listbackups
				printf "Please choose a backup from above and an run \'$0 restore <backupname>\'\n"
			fi
		fi		
	;;
	"--list-backups" | "-lb" )
		listbackups
	;;
	"--resetconfig" )
		loaddefaultconfig
	;;
	"--edit" | "-e" )
		if [ $2 ]; then
			if [ -e ${SAVEDIR}/${2} ]; then
				TARGETS=$2
			else
				printf "${TPUTRED} Save not found\n"
				exit 1
			fi
		else
			read -r -p "${USERINPUTTPUT}No Save selected. Select all saves? [Y/n]" -n 1 SELECTALLSAVESINPUT
			case $SELECTALLSAVESINPUT in
			[nN])
				printf "${ERRORTPUT}\nNo save Selected\n"
				exit 1
			;;
			*)
				printf "${LOGTPUT}Selecting all saves...\n\n"
				TARGETS=$SAVEDIR/*
			;;
		esac
		fi

		read -r -p "${USERINPUTTPUT}Unlock all Levels? [y/N]" -n 1 UNLOCKLEVELSINPUT
		case $UNLOCKLEVELSINPUT in
			[yY] )
				printf "${LOGTPUT}Unlocking all levels...\n\n"
				#TODO uncommenting sed
				#sed -i -e 's/solved #f/solved #t/g' $TARGETS
			;;
			* )
				printf "${LOGTPUT}Skipping Level unlock...\n\n"
		esac

		read -p "${USERINPUTTPUT}Edit powerups? [y/N] " -n 1 EDITPOWERUPINPUT
		case $EDITPOWERUPINPUT in
			[yY] )
				printf "\n${USERINPUTTPUT}Avaiable powerupes:\n 1:none 2:growup  3:iceflower  4:fireflower 5:airflower 6:earthflower\n"
				read -p "Plese select a Bonus by pressing a number from 1-6: " -n 1 SELECTEDPOWERUP
				#TODO powerup anmount
				printf "${LOGTPUT}\n"
				SETTINGPOWERUP=1
				while [ $SETTINGPOWERUP -eq 1 ]; do
					SETTINGPOWERUP=0
					SETANMOUNT=1
					case $SELECTEDPOWERUP in
						#TODO powerup edit 
						1 )
							printf "Removing all powerups ...\n"
							POWERUPNAME="none"
							SETANMOUNT=0
						;;
						2 )
							printf "Selecting powerup \'Growup\'"
							POWERUPNAME="growup"
							SETANMOUNT=0
						;;
						3 )
							printf "Selecting powerup \'fireflower\'"
							POWERUPNAME="fireflower"
						;;
						4 )
							printf "Selecting powerup \'iceflower\'"
							POWERUPNAME="iceflower"
						;;
						5 )
							printf "Selecting powerup \'airflower\'"
							POWERUPNAME="airflower"
						;;
						6 )
							printf "Selecting powerup \'earthflower\'"
							POWERUPNAME="Earthflower"
						;;
						* )
							printf "${ERRORTPUT}Bonus with number ${SELECTEDPOWERUP} not found\n"
							printf "${USERINPUTTPUT}Avaiable powerupes:\n1:none 2:growup  3:iceflower  4:fireflower 5:airflower 6:earthflower\nPlese select a Bonus by pressing a number from 1-6\n"
							printf "\n${USERINPUTTPUT}Avaiable powerupes:\n 1:none 2:growup  3:iceflower  4:fireflower 5:airflower 6:earthflower\n"
							read -p "Plese select a Bonus by pressing a number from 1-6: " -n 1 SELECTEDPOWERUP
							SETTINGPOWERUP=1
					esac
				done
				sed -i -e "s|bonus \"[a-z]\"|bonus \"${POWERUPNAME}\"|g" $TARGETS
			;;
			*)
				printf "${LOGTPUT}Skipping Powerup edit..\n\n"
		esac
	;; #end of edit
	*)
		printf "${INFOTPUT}Commands \n"
		printf "==========\n"
		printf "Arguments: [OPTIONAL] NEEDED\n\n"
		#TODO --info,-i command
		printf " --list,-l:\n"
		printf "   list all avaiable saves\n\n"
		printf " --edit,-e [save] (WIP):\n"
		printf "   Edit games saves\n   Creating a backup before editing is strongly recommended\n\n"
		printf " --backup,-b: \n"
		printf "   backup current supertux2 saves\n\n"
		printf " --list-backups,-lb:\n"
		printf "   list game save backups\n\n"
		printf " --restore,-r BACKUP: \n"
		printf "   restore backup\n\n"
		printf " --resetconfig: \n"
		printf "  reset configuration file of this program.\n  Does NOT affect Supertux 2 save files\n\n"
		printf "\n\nThank you very much for using supertux2-savedit! \n"
		printf "Source code can be found on https://github.com/LeSnake04/supertux2-saveedit\n"
		printf "Contributions, feture requests and bugreports are welcome :)\n"
	;;
esac
